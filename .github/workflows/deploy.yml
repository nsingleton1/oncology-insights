name: Deploy OncoInsights

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY_URL: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  K8S_NAMESPACE: oncology

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --watchAll=false

      - name: Build application
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: version
        run: echo "VERSION=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Extract version
        id: version
        run: echo "VERSION=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: |
          cd kubernetes
          find . -type f -name "*.yaml" -exec sed -i "s|\${REGISTRY_URL}|${{ env.REGISTRY_URL }}|g" {} \;
          find . -type f -name "*.yaml" -exec sed -i "s|\${VERSION}|${{ steps.version.outputs.VERSION }}|g" {} \;
          kubectl apply -f configmap.yaml
          kubectl apply -f service.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f ingress.yaml
          kubectl rollout status deployment/oncoinsights -n ${{ env.K8S_NAMESPACE }} 